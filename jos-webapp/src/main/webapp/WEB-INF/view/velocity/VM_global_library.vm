#macro( josFormSingleSelect $path $opts $optgroups $attributes )
	#springBind($path)
	#set($selected = false)
	<select name="${status.expression}" ${attributes}>
		<option value=""#if(!$selected && "$!status.value" == "")#set($selected = true) selected="selected"#end>-</option>
		##options
		#foreach($option in $opts.entrySet())
		<option value="${option.key}"#if(!$selected && "$!status.value" == "$option.key")#set($selected = true) selected="selected"#end>$option.value</option>
		#end
		##optgroups
		#foreach($options in $optgroups.entrySet())
		<optgroup label="${options.key}">
			#foreach($option in $options.value.entrySet())
			<option value="${option.key}"#if(!$selected && "$!status.value" == "$option.key")#set($selected = true) selected="selected"#end>$option.value</option>
			#end
		</optgroup>
		#end
	</select>
#end

#**
 * josUrl
 *
 * Takes a relative URL and makes it absolute from the server root by
 * adding the context root for the web application.
 *#
#macro( josUrl $relativeUrl )$response.encodeURL("#springUrl(${relativeUrl})")#end

#**
 * josMessage
 *
 * Macro to translate a message code into a message.
 *#
#macro( josMessage $code)$springMacroRequestContext.getMessage($code)#end
#macro( josMessageEscaped $code $htmlEscape )$springMacroRequestContext.getMessage($code, null, $htmlEscape)#end

#macro( josMessageArgs $code $args )$springMacroRequestContext.getMessage($code, $args)#end
#macro( josMessageArgsEscaped $code $args $htmlEscape )$springMacroRequestContext.getMessage($code, $args.toArray(), $htmlEscape)#end

#macro( josMessageTextArgs $code $args $text )$springMacroRequestContext.getMessage($code, $args.toArray(), $text)#end
#macro( josMessageTextArgsEscaped $code $args $text $htmlEscape )$springMacroRequestContext.getMessage($code, $args.toArray(), $text, $htmlEscape)#end
